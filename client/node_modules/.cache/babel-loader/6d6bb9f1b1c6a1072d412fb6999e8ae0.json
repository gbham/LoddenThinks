{"remainingRequest":"C:\\Dev\\LoddenThinks\\client\\node_modules\\babel-loader\\lib\\index.js!C:\\Dev\\LoddenThinks\\client\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Dev\\LoddenThinks\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Dev\\LoddenThinks\\client\\src\\components\\LoddenThinksGame.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Dev\\LoddenThinks\\client\\src\\components\\LoddenThinksGame.vue","mtime":1595444244798},{"path":"C:\\Dev\\LoddenThinks\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Dev\\LoddenThinks\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Dev\\LoddenThinks\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Dev\\LoddenThinks\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["LoddenThinksGame.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>   \n      \n    <button ref=\"loddenBtn\" style=\"display:none\" v-on:click=\"setlodden()\">lodden</button> \n    <br>\n    <button ref=\"player1Btn\" style=\"display:none\" v-on:click=\"setPlayer1()\">Player1</button>  \n    <br>    \n    <button ref=\"player2Btn\" style=\"display:none\" v-on:click=\"setPlayer2()\">Player2</button>         \n    <br>\n\n    <textarea \n        ref=\"listOfPlayersDisplay\" \n        width=\"1920\" \n        height=\"1080\"           \n        wrap=hard          \n        rows=3\n        cols=25\n        style=\"border: 1px solid black; display:none\">\n    </textarea>   \n\n    <br>\n\n    <p>\n        <textarea \n            ref=\"questionDisplay\" \n            width=\"1920\" \n            height=\"1080\" \n            wrap=hard          \n            rows= 2\n            cols= 25\n            placeholder=\"Enter the question here ...\"\n            style=\"border: 1px solid black; display:none\">\n        </textarea>  \n        <br>             \n        <textarea \n            ref=\"loddenAnswerInput\" \n            width=\"1920\" \n            height=\"1080\" \n            wrap=hard          \n            rows= 1\n            cols= 25\n            placeholder=\"Enter the answer here ...\"\n            style=\"border: 1px solid black; display:none\">\n        </textarea>\n        <br> \n        <button ref=\"setQuestionBtn\" style=\"display:none\" v-on:click=\"setQuestionAndAnswer()\">Set Question</button>  \n    </p>\n\n    <br>\n\n    <textarea \n        ref=\"textDisplay\" \n        width=\"1920\" \n        height=\"1080\"           \n        wrap=hard          \n        rows= 20\n        cols= 25\n        style=\"border: 1px solid black;\">\n    </textarea>   \n\n    <br>\n    \n    <textarea \n        ref=\"textInput\"               \n        width=\"1920\" \n        height=\"1080\"           \n        wrap=hard          \n        rows= 1\n        cols= 25\n        style=\"border: 1px solid black; display:none\">\n    </textarea> \n\n    <br>\n\n    <button ref=\"sendBtn\" style=\"display:none\" v-on:click=\"move()\">Send</button>    \n    <button ref=\"settleBtn\" style=\"display:none\" v-on:click=\"settle()\">Settle</button> \n\n    <br><br><br>\n    \n    <button ref=\"createGroupBtn\" style=\"display:none\" v-on:click=\"createGroup()\">Create Group</button> \n    <button ref=\"joinGroupBtn\" style=\"display:none\" v-on:click=\"joinGroup()\">Join Group</button>     \n    <textarea \n        ref=\"userGroupInput\"               \n        width=\"1920\" \n        height=\"1080\"           \n        wrap=hard          \n        rows= 1\n        cols= 25\n        style=\"border: 1px solid black; display:none\">\n    </textarea> \n    \n    <button ref=\"createPlayerBtn\" style=\"display:block\" v-on:click=\"createPlayer()\">Create Player</button> \n    <textarea \n        ref=\"userInfoInput\"               \n        width=\"1920\" \n        height=\"1080\"           \n        wrap=hard          \n        rows= 1\n        cols= 25\n        style=\"border: 1px solid black; display:block\">\n    </textarea> \n     \n  </div>\n</template>\n\n<script>\n    import io from \"socket.io-client\";\n    export default {\n        name: \"LoddenThinksGame\",        \n        data() {\n             return {\n                // socket: {},                \n                currentValue: 0,                \n                \n            }\n        },\n        created() {\n            this.socket = io(\"http://localhost:3000\");\n            \n        },        \n        mounted() {\n            \n            this.listOfPlayersDisplay = this.$refs.listOfPlayersDisplay;\n\n            this.loddenBtn = this.$refs.loddenBtn;\n            this.player1Btn = this.$refs.player1Btn; \n            this.player2Btn = this.$refs.player2Btn; \n            this.player1NameField = this.$refs.player1NameField;\n            this.player2NameField = this.$refs.player2NameField;\n            this.loddenNameField = this.$refs.loddenNameField;\n\n            this.questionDisplay = this.$refs.questionDisplay;\n            this.loddenAnswerInput = this.$refs.loddenAnswerInput;\n            this.setQuestionBtn = this.$refs.setQuestionBtn;\n            this.textDisplay = this.$refs.textDisplay;\n            this.textInput = this.$refs.textInput;\n            this.sendBtn = this.$refs.sendBtn;\n            this.settleBtn = this.$refs.settleBtn;\n\n            this.userInfoInput = this.$refs.userInfoInput;\n            this.createPlayerBtn = this.$refs.createPlayerBtn;\n\n            this.createGroupBtn = this.$refs.createGroupBtn;\n            this.joinGroupBtn = this.$refs.joinGroupBtn;\n            this.userGroupInput = this.$refs.userGroupInput;\n            \n            // this.socket.on(\"connect\", () => {\n            //     this.textDisplay.value += this.socket.id;\n\n            // });\n\n            this.socket.on(\"playerDisconnected\", (playerName) => {\n                this.textDisplay.value += \"\\n\\n Player: \" + playerName + \" has disconnected\";\n            });\n\n            this.socket.on(\"playerMove\", (playerName, value) => {\n                this.textDisplay.value += \"\\n\\n\"                 \n                this.textDisplay.value += playerName + \" has selected under [\" + value + \"]\";  \n                this.currentValue = value;             \n                \n            });            \n\n            this.socket.on(\"loddenIs\", (name) => {  \n                this.listOfPlayersDisplay.style.display = \"initial\";   \n                this.listOfPlayersDisplay.value += name + \" is lodden\\n\";\n                this.loddenBtn.style.display = \"none\";  \n                this.loddenNameField.style.display = \"none\"; \n\n            });\n\n            this.socket.on(\"player1Is\", (name) => { \n                this.listOfPlayersDisplay.style.display = \"initial\";                \n                this.listOfPlayersDisplay.value += name + \" is Player1\\n\";                \n                this.player1Btn.style.display = \"none\";  \n                this.player1NameField.style.display = \"none\"; \n            });\n            \n            this.socket.on(\"player2Is\", (name) => {      \n                this.listOfPlayersDisplay.style.display = \"initial\";          \n                this.listOfPlayersDisplay.value += name + \" is Player2\\n\";\n                this.player2Btn.style.display = \"none\";  \n                this.player2NameField.style.display = \"none\"; \n            });\n\n            this.socket.on(\"hidePlayerSelectionControls\", () => {     \n                \n                this.loddenBtn.style.display = \"none\";                  \n                this.player1Btn.style.display = \"none\";  \n                this.player2Btn.style.display = \"none\";  \n            });\n\n            this.socket.on(\"askloddenForQuestionAndAnswer\", () => {     \n                                   \n                this.questionDisplay.style.display = \"block\"; \n                this.loddenAnswerInput.style.display = \"block\";\n                this.setQuestionBtn.style.display = \"block\";                 \n            });\n\n            this.socket.on(\"gameReady\", (question) => {     \n                \n                this.setQuestionBtn.style.display = \"none\";\n                this.questionDisplay.style.display = \"block\";   \n                this.questionDisplay.value = \"Q: \" + question;\n                this.questionDisplay.readOnly = \"true\";\n                this.loddenAnswerInput.readOnly = \"true\";\n            });\n\n            this.socket.on(\"showPlayerControls\", () => {     \n                \n                this.textInput.style.display = \"initial\";\n                this.sendBtn.style.display = \"initial\";\n                this.settleBtn.style.display = \"initial\";\n            });\n\n            this.socket.on(\"hidePlayerControls\", () => {     \n                \n                this.textInput.style.display = \"none\";\n                this.sendBtn.style.display = \"none\";\n                this.settleBtn.style.display = \"none\";\n            });\n\n            this.socket.on(\"declareWinner\", (direction, winningName, winningGuess, loddenAnswer) => {\n               \n                if(direction == \"theUnder\")\n                {\n                    this.textDisplay.value = \"\\nThe winner is: \" + winningName + \", with under [\" + winningGuess + \"]\";\n                }\n                else if (direction == \"theOver\")\n                {\n                    this.textDisplay.value = \"\\nThe winner is: \" + winningName + \", with [\" + winningGuess + \"] and over\";\n                }\n\n                this.textDisplay.value += \"\\n\\nlodden thought: \" + loddenAnswer;\n            });                          \n\n            this.socket.on(\"printPlayers\", (players) => {              \n                this.textDisplay.value =\"\";\n\n                for(var i = 0; i < players.length; i ++)\n                {\n                    this.textDisplay.value += \"\\n\" + players[i].name;\n                }                               \n            });\n\n            this.socket.on(\"printGroup\", (group) => {                \n                this.textDisplay.value = \"\\n Group \" + group[0] + \":\";\n                \n                //Start at index 1 since position 0 is the name of the group\n                for(var i = 1; i < group.length; i ++)\n                {\n                    this.textDisplay.value += \"\\n\" + group[i].name;\n                }                               \n            });\n\n            this.socket.on(\"hideCreatePlayerControls\", () => {\n                this.createPlayerBtn.style.display = \"none\";\n                this.userInfoInput.style.display = \"none\";\n            });\n\n            this.socket.on(\"showCreateAndJoinGroupControls\", () => { \n                this.createGroupBtn.style.display = \"block\";\n                this.joinGroupBtn.style.display = \"block\";\n                this.userGroupInput.style.display = \"block\"; \n            });\n\n            this.socket.on(\"showRoleSelectionControls\", () => {               \n                this.loddenBtn.style.display = \"block\";\n                this.player1Btn.style.display = \"block\";            \n                this.player2Btn.style.display = \"block\";\n            });            \n        },\n        methods: {\n            //Sending in \"this.$refs.textDisplay.value\" as a param from the button tag that calls this method didnt work         \n            move() { \n                this.textDisplay = this.$refs.textDisplay;\n                this.textInput = this.$refs.textInput;\n\n                var value = this.textInput.value;                 \n                \n                this.textInput.value = \"\";\n                \n                //Only the first digit was being used in the comparison, for example, it wasnt comparing \"15\" as a whole, instead it appeared to be only using the \"1\".\n                //Not entirely sure what was happening but this appears to have resolved any issues, could have just been the values were being stored as strings\n                if(Number(value) > Number(this.currentValue))\n                {                   \n                    this.socket.emit(\"move\", value);\n                }\n                else\n                {\n                    this.textDisplay.value += \"\\n\\nInvalid move, given value is below or equal to your opponents guess guess\";\n                }\n            },\n\n            settle() {\n                this.socket.emit(\"settle\");\n            },\n\n            setlodden() {                \n                this.socket.emit(\"assignlodden\");\n            },\n\n            setPlayer1() {                \n                this.socket.emit(\"assignPlayer1\");\n            },\n\n            setPlayer2() {                \n                this.socket.emit(\"assignPlayer2\");\n            },\n\n            setQuestionAndAnswer() {\n                var question = this.$refs.questionDisplay.value;\n                var answer = this.$refs.loddenAnswerInput.value;                \n\n                this.socket.emit(\"setQuestionAndAnswer\", question, answer);\n            },\n\n            //Currently no validation done on whether the username is a duplicate\n            createPlayer() {\n                var name = this.$refs.userInfoInput.value;\n\n                this.socket.emit(\"createPlayer\", name);\n            },\n\n            //Currently no validation done on whether the group is a duplicate\n            createGroup() {\n                var groupName = this.$refs.userGroupInput.value;\n\n                this.socket.emit(\"createGroup\", groupName);\n            },\n\n            //Currently no validation done on whether the group exists\n            joinGroup() {\n                var groupName = this.$refs.userGroupInput.value;\n\n                //have something like this: (check if it exists and if It is full)\n                // this.socket.emit(\"IsGroupValid\", groupName) - MAYBE USE THE SOCKET.EMIT QUESTION THING I SAVED IN NOTES\n\n                this.socket.emit(\"joinGroup\", groupName);\n            }\n        }\n    }\n\n\n</script>\n\n\n"],"sourceRoot":"src/components"}]}