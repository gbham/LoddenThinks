
- Noticed this when looking at socket.io docs, will likely come in handy
	-// sending with acknowledgement
	-socket.emit('question', 'do you think so?', function (answer) {});
- Handle the correct flow of what controls should be shown and hidden when
	-Hide the group controls once someone has joined a group
- Not sure I like "player.guess", should maybe just be "move" or "value", need to ensure code is as simple and readable as possible
	
- The reason for a separate allSockets[] array is since I cant send the socket to the client, although, im not sure if I need to send the whole player[] anymore, most of the time I am now sending, for example, just player.name. This would mean I could put socket back inside of the player array instead of using socketID and comparing with the allSockets[].socket.ID to find the desired socket
- Maybe all socket.on("") in the server should just call a function like I have done with createPlayer/group, find out what is standard  
- Using groupIndex wont work on a large scale, not sure how much traffic would cause the failure but in theory a group could be removed from the groups array at the same time that someone is adding a member to a different group within the groups array, this could cause a user to be added to the wrong group since the index is changed by another group mid execution
- GetGroupName() may be redundant, keep an eye on. If no unique needs come up then GetGroupIndex() may be enough on its own (some changes would be needed but at the moment the GetGroupName() function only seems to be a means to an end to get the groupIndex)
- Need to decide how I want the game to flow once someone has DC'd
	- Could just right away put the 2 remaining players back in the lobby and print the members of the group.
	- Should also probs have a way to go back to the main menu and leave/join a new group
- Use the rooms feature to group together sockets
- Dont think the scenario is covered: when the final person remaining in a group leaves, the the group should be removed from groups[] so the name can be used again
- Maybe create Stackoverflow question: this.socket.once("usernameAvailable?", (answer) => {.......}
	-Had to use socket.once instead of socket.on, which appears to have fixed the issue but still unsure on what is causing this and how this fixed it. Scenario is: User enters invalid username, everything acts as intended, user is informed it is unavailable. Now, when a valid username is entered afterwards, it doesnt just run "this.socket.emit("createPlayer", username)" once, it appears to run it twice, somehow?? The first time with the previous invalid username and a second time with the current valid username just entered (I am printing username when CreatePlayer() server-side function is ran). The thing is this section of the code shouldnt be entered unless the username is valid??? Also using socket.once would make me think the invalid username, which is the first to enter the server-side CreatePlayer() function would have been the one that saved?
                

Desired features:

- Log results/player/group data (Database)
- Add the ability to start a new game after one is finished
- Could be useful to keep a list of all moves server side, although only the most recent move for each player may do
- Provide example questions (https://www.reddit.com/r/poker/comments/870v0d/whats_your_best_lodden_thinks_question/)
- Notify player1/player2 when looden is inputting a question/answer
- Make function SendToGroup(Group, emitMessage, params) (Will this even work??? Did I forget the emitMessage needs to be in quotation marks, a variable cant be used on its own with no quotation marks? Confirm this is true first.
- The "settle" button should only be shown once the first player has made a prediction
- Have a textarea at the top to show username
- Add a instructions section
- Validation needed for: (keep in mind the weird stuff going with CreatePlayer() that has appeared to have been fixed by using socket.once)
	-(done)Being able to click create player or group with no text entered
	-(done)Allowing a duplicate username/group to be created
	-(done)Allowing someone to join a group that is full
	-Allowing someone to join a group that doesnt exist
	-Decimals are valid
	-User input accepting any type of character